class Solution {
    public int maxDepth(TreeNode root) {
        if(root == null) return 0;
        
        int max = 1;
        Stack<NodeInfo> stack = new Stack<>();
        stack.push(new NodeInfo(root, 1));
        while(!stack.isEmpty()){
            NodeInfo currNode = stack.pop();
            max = Math.max(currNode.depth, max);
            
            if(currNode.node.left != null){
                NodeInfo newNode = new NodeInfo(currNode.node.left, currNode.depth+1);
                stack.push(newNode);
            }
            if(currNode.node.right != null){
                NodeInfo newNode = new NodeInfo(currNode.node.right, currNode.depth+1);
                stack.push(newNode);
            }
        }
        return max;
    }
    
class NodeInfo{
    TreeNode node;
    int depth;

    public NodeInfo(TreeNode node, int depth){
        this.node = node;
        this.depth = depth;
    }
}
}
